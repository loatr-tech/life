{"version":3,"sources":["_context/screen-size.context.tsx","_context/user.context.tsx","global/global-header.tsx","_utils/time.ts","_utils/number.ts","post/post-card.tsx","_utils/categories.ts","_context/navigation.context.tsx","home/home-navigation.tsx","_utils/api.ts","post/post-card-placeholder.tsx","home/home-main.tsx","home/home.tsx","user/user.tsx","posts/post-owner.tsx","post-comments/post-reply.tsx","_shared/loading-spinner.tsx","post-comments/post-thread-head.tsx","post-comments/post-thread.tsx","post-comments/post-comments.tsx","posts/post-mian.tsx","posts/post.tsx","post-creation/post-creation-category.tsx","post-creation/post-creation.tsx","global/global-side-panel.tsx","login/login-google.tsx","login/login.tsx","App.tsx","reportWebVitals.ts","_context/global.context.tsx","index.tsx"],"names":["SCREEN","ScreenSizeContext","createContext","ScreenSizeContextProvider","props","useState","screenSize","setScreenSize","sidePanelOpen","setSidePanelOpen","useEffect","window","innerWidth","Provider","value","toggleSidePanel","children","UserContext","UserContextProvider","userInfo","setUserInfo","loggedIn","setLoggedIn","GlobalHeader","useContext","className","to","Search","placeholder","allowClear","onSearch","console","log","onClick","src","type","timeSince","date","seconds","Math","floor","Date","getTime","interval","displayCount","count","integer","parseInt","toFixed","PostCard","post","owner","name","createdAt","views","likes","comments","id","title","content","CATEGORIES","icon","subcategories","CATEGORIES_MAP","experience_sharing","promotion","total_package","interview_questions","need_referral","we_re_hiring","apply_school","application_results","work_visa","green_card","student_visa","lets_study","leet_code","used_items","house_rental","CATEGORIES_PARENT","NavigationContext","NavigationContextProvider","activeCategory","setActiveCategory","HomeNavigation","onCategoryChange","menuInfo","key","handleClick","defaultSelectedKeys","defaultOpenKeys","mode","Item","map","topCategory","SubMenu","subCategory","ItemGroup","category","BASE_URL","process","api","get","url","config","axios","payload","PostCardPlaceholder","HomeMain","posts","setPosts","loading","setLoading","a","params","data","items","fetchAllPosts","shape","size","Array","fill","_","index","block","Home","User","HomeOutlined","alt","PostOwner","fetching","PostReply","isHero","reply","LoadingSpinner","PostThreadHead","thread","refreshReplies","startReply","setStartReply","setReply","replySubmitting","setReplySubmitting","onReply","post_id","thread_id","user_id","comment","disabled","rows","onChange","e","target","PostThread","viewReply","setViewReply","replies","setReplies","repliesPage","setRepliesPage","totalReplies","setTotalReplies","fetchingReplies","setFetchingReplies","fetchingMoreReplies","setFetchingMoreReplies","_loadReplies","page","limit","onViewReply","loadMoreReplies","nextRepliesPage","concat","length","PostComments","threads","setThreads","setComment","threadCount","setThreadCount","commentSubmitting","setCommentSubmitting","_loadComments","currentPost","onComment","defaultCurrent","pageSize","showSizeChanger","total","PostMain","readOnly","Post","setPost","setFetching","match","postId","getPostDetails","PostCreationCategory","selectedCategory","setSelectedCategory","showMissingField","modalOpen","setModelOpen","setCategory","onCategoryChanged","evt","undefined","danger","visible","onOk","onCancel","Group","PostCreation","setTitle","setContent","publishing","setPublishing","setShowMissingField","onPublish","history","push","getValue","onChangeContent","GlobalSidePanel","useHistory","path","exact","LoginGoogle","unmounted","onLoad","onError","element","document","getElementsByTagName","lastScript","script","createElement","parentNode","insertBefore","head","appendChild","onerror","onload","loadScript","gapi","load","auth2","getAuthInstance","client_id","cookie_policy","init","then","res","isSignedIn","currentUser","getElementById","removeChild","removeScript","signIn","basicProfile","getBasicProfile","authResponse","getAuthResponse","googleId","getId","tokenObj","tokenId","id_token","accessToken","access_token","profileObj","imageUrl","getImageUrl","email","getEmail","getName","givenName","getGivenName","familyName","getFamilyName","err","Login","App","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalContextProvider","ReactDOM","render"],"mappings":"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","file":"static/js/main.991dd7bc.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\n\nexport const SCREEN = {\n  DESKTOP: 'DESKTOP',\n  TABLET: 'TABLET',\n  MOBILE: 'MOBILE',\n};\n\n\nexport const ScreenSizeContext = createContext({} as any);\n\nexport default function ScreenSizeContextProvider(props: any) {\n  const [screenSize, setScreenSize] = useState(SCREEN.DESKTOP);\n  const [sidePanelOpen, setSidePanelOpen] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 768) {\n      setScreenSize(SCREEN.DESKTOP);\n    } else if (window.innerWidth >= 576) {\n      setScreenSize(SCREEN.TABLET);\n    } else {\n      setScreenSize(SCREEN.MOBILE);\n    }\n  }, []);\n\n  const toggleSidePanel = () => {\n    setSidePanelOpen(!sidePanelOpen);\n  }\n\n  return (\n    <ScreenSizeContext.Provider\n      value={{ screenSize, sidePanelOpen, toggleSidePanel }}\n    >\n      {props.children}\n    </ScreenSizeContext.Provider>\n  );\n}\n","import React, { createContext, useState } from 'react';\n\nexport const UserContext = createContext({} as any);\n\nexport default function UserContextProvider(props: any) {\n  const [userInfo, setUserInfo] = useState();\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  return (\n    <UserContext.Provider\n      value={{ userInfo, setUserInfo, loggedIn, setLoggedIn }}\n    >\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Avatar, Button, Input } from 'antd';\nimport './global-header.scss';\nimport { Link } from 'react-router-dom';\nimport { SCREEN, ScreenSizeContext } from '../_context/screen-size.context';\nimport { UserContext } from '../_context/user.context';\n\nfunction GlobalHeader() {\n  const { screenSize, toggleSidePanel } = useContext(ScreenSizeContext);\n  const { loggedIn } = useContext(UserContext);\n  const onSearch = (value: string) => {\n    console.log(value);\n  };\n\n  return (\n    <header className=\"global-header\">\n      <div className=\"global-header__container\">\n        {/* Logo */}\n        <Link className=\"global-header__logo\" to=\"/\">\n          <h1>上岸</h1>\n          <span>beta</span>\n        </Link>\n        {/* Search */}\n        <div className=\"global-header__search\">\n          <Input.Search\n            placeholder=\"你在想啥？\"\n            allowClear\n            onSearch={onSearch}\n            className=\"global-header__search-input\"\n          />\n        </div>\n        {/* User */}\n        {loggedIn ? (\n          screenSize === SCREEN.MOBILE ? (\n            <Button onClick={() => toggleSidePanel()}>\n              <i className=\"fas fa-bars\"></i>\n            </Button>\n          ) : (\n            <Link to=\"/user\">\n              <Avatar src=\"https://www.w3schools.com/howto/img_avatar.png\" />\n            </Link>\n          )\n        ) : (\n          <Link to=\"/login\">\n            <Button type=\"primary\">\n              <i className=\"fas fa-sign-in-alt\"></i> 登录\n            </Button>\n          </Link>\n        )}\n      </div>\n    </header>\n  );\n}\n\nexport default GlobalHeader;\n","export function timeSince(date: Date | string) {\n  const seconds = Math.floor((new Date().getTime() - new Date(date).getTime()) / 1000);\n\n  let interval = seconds / 31536000;\n\n  if (interval > 1) {\n    return Math.floor(interval) + ' 年前';\n  }\n  interval = seconds / 2592000;\n  if (interval > 1) {\n    return Math.floor(interval) + ' 月前';\n  }\n  interval = seconds / 86400;\n  if (interval > 1) {\n    return Math.floor(interval) + ' 天前';\n  }\n  interval = seconds / 3600;\n  if (interval > 1) {\n    return Math.floor(interval) + ' 小时前';\n  }\n  interval = seconds / 60;\n  if (interval > 1) {\n    return Math.floor(interval) + ' 分钟前';\n  }\n  return '刚刚';\n}\n\n","export function displayCount(count: string | number) {\n  const integer = parseInt(count as string);\n  if (integer > 1000) return `${(integer/1000).toFixed(1)}k`;\n  else if (integer > 1000000) return `${(integer/1000000).toFixed(1)}m`;\n  return integer;\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Avatar } from 'antd';\n\nimport './post-card.scss';\nimport { timeSince } from '../_utils/time';\nimport { displayCount } from '../_utils/number';\n\n\nfunction PostCard({ post }: any) {\n  return (\n    <div className=\"post-card\">\n      <section className=\"post-card__stats\">\n        <Avatar className=\"post-card__stats-avatar\">U</Avatar>\n        <div className=\"post-card__stats-username\">\n          <div>{post?.owner?.name}</div>\n          <div className=\"post-card__stats-ago\">\n            {timeSince(post?.createdAt)}\n          </div>\n        </div>\n        <div className=\"post-card__stats-icon\">\n          <i className=\"far fa-eye\"></i> {displayCount(post?.views)}\n        </div>\n        <div className=\"post-card__stats-icon\">\n          <i className=\"far fa-thumbs-up\"></i> {displayCount(post?.likes)}\n        </div>\n        <div className=\"post-card__stats-icon\">\n          <i className=\"far fa-comment\"></i> {displayCount(post?.comments)}\n        </div>\n      </section>\n      <hr className=\"post-card__divider\" />\n      <Link to={`/post/${post.id}`} className=\"post-card__details\">\n        <h3 className=\"post-card__details-title\">{post.title}</h3>\n        <p className=\"post-card__details-content\">\n          {post.content ||\n            'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quasi nemo mollitia repellendus, laudantium unde, vel iste tempora eum nihil aperiam aliquid? Deleniti cum beatae iste sapiente molestias ullam consequatur alias.'}\n        </p>\n      </Link>\n    </div>\n  );\n}\n\nexport default PostCard;\n","export const CATEGORIES = [\n  {\n    id: 'career',\n    name: '打工人儿',\n    icon: 'fas fa-suitcase',\n    subcategories: [\n      {\n        id: 'career_exp',\n        type: 'group',\n        name: '经验分享',\n        subcategories: [\n          {\n            id: 'experience_sharing',\n          },\n          {\n            id: 'promotion',\n          },\n        ],\n      },\n      {\n        id: 'career_data',\n        type: 'group',\n        name: '数据分享',\n        subcategories: [\n          {\n            id: 'total_package',\n          },\n          {\n            id: 'interview_questions',\n          },\n        ],\n      },\n      {\n        id: 'career_opportunities',\n        type: 'group',\n        name: '职位分享',\n        subcategories: [\n          {\n            id: 'need_referral',\n          },\n          {\n            id: 'we_re_hiring',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: 'immigration',\n    name: '留学移民',\n    icon: 'far fa-id-card',\n    subcategories: [\n      {\n        id: 'international_student',\n        type: 'group',\n        name: '留学申请',\n        subcategories: [\n          {\n            id: 'apply_school',\n          },\n          {\n            id: 'application_results',\n          },\n        ],\n      },\n      {\n        id: 'immigration',\n        type: 'group',\n        name: '移民签证',\n        subcategories: [\n          {\n            id: 'work_visa',\n          },\n          {\n            id: 'green_card',\n          },\n          {\n            id: 'student_visa',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: 'study',\n    name: '天天向上',\n    icon: 'fas fa-book-reader',\n    subcategories: [\n      {\n        id: 'lets_study',\n      },\n      {\n        id: 'leet_code',\n      },\n    ],\n  },\n  {\n    id: 'neighborhood',\n    name: '街坊邻居',\n    icon: 'fas fa-people-arrows',\n    subcategories: [\n      {\n        id: 'used_items',\n      },\n      {\n        id: 'house_rental',\n      },\n    ],\n  },\n];\n\nexport const CATEGORIES_MAP: any = {\n  // 打工人儿\n  experience_sharing: '经验分享',\n  promotion: '升职加薪',\n  total_package: '我的包裹',\n  interview_questions: '北美面经',\n  need_referral: '跪求内推',\n  we_re_hiring: '我要招人',\n  // 留学签证\n  apply_school: '申请学校',\n  application_results: '申请结果',\n  work_visa: '工作签证',\n  green_card: '移民绿卡',\n  student_visa: '学生签证',\n  // 好好学习\n  lets_study: '我要自习',\n  leet_code: '组队刷题',\n  // 街坊邻居\n  used_items: '二手市场',\n  house_rental: '房屋出租',\n};\n\nexport const CATEGORIES_PARENT: any = {\n  // 打工人儿\n  experience_sharing: '打工人儿',\n  promotion: '打工人儿',\n  total_package: '打工人儿',\n  interview_questions: '打工人儿',\n  need_referral: '打工人儿',\n  we_re_hiring: '打工人儿',\n  // 留学签证\n  work_visa: '留学移民',\n  green_card: '留学移民',\n  student_visa: '留学移民',\n  // 好好学习\n  lets_study: '天天向上',\n  leet_code: '天天向上',\n  // 街坊邻居\n  used_items: '街坊领居',\n  house_rental: '街坊领居',\n};","import React, { createContext, useState } from 'react';\n\nexport const NavigationContext = createContext({} as any);\n\nexport default function NavigationContextProvider(props: any) {\n  const [activeCategory, setActiveCategory] = useState('all');\n\n  return (\n    <NavigationContext.Provider value={{ activeCategory, setActiveCategory }}>\n      {props.children}\n    </NavigationContext.Provider>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Menu } from 'antd';\nimport { MenuInfo } from 'rc-menu/lib/interface';\nimport { CATEGORIES, CATEGORIES_MAP } from '../_utils/categories';\nimport { NavigationContext } from '../_context/navigation.context';\n\nfunction HomeNavigation({ onCategoryChange }: any) {\n  const { activeCategory, setActiveCategory } = useContext(NavigationContext);\n\n  const handleClick = ({ key }: MenuInfo) => {\n    setActiveCategory(key);\n    onCategoryChange?.(key);\n  };\n\n  return (\n    <Menu\n      onClick={(menuInfo) => handleClick(menuInfo)}\n      defaultSelectedKeys={[activeCategory]}\n      defaultOpenKeys={['career']}\n      mode=\"inline\"\n    >\n      {/* All */}\n      <Menu.Item key=\"all\" icon={<i className=\"fas fa-rss\"></i>}>\n        最新动态\n      </Menu.Item>\n      {/* By Categories */}\n      {CATEGORIES.map((topCategory) => {\n        return (\n          <Menu.SubMenu\n            key={topCategory.id}\n            icon={<i className={topCategory.icon}></i>}\n            title={topCategory.name}\n          >\n            {topCategory.subcategories.map((subCategory: any) => {\n              return subCategory.type === 'group' ? (\n                <Menu.ItemGroup key={subCategory.id} title={subCategory.name}>\n                  {subCategory.subcategories.map((category: any) => {\n                    return (\n                      <Menu.Item key={category.id}>\n                        {CATEGORIES_MAP[category.id]}\n                      </Menu.Item>\n                    );\n                  })}\n                </Menu.ItemGroup>\n              ) : (\n                <Menu.Item key={subCategory.id}>\n                  {CATEGORIES_MAP[subCategory.id]}\n                </Menu.Item>\n              );\n            })}\n          </Menu.SubMenu>\n        );\n      })}\n    </Menu>\n  );\n}\n\nexport default HomeNavigation;\n","import axios, { AxiosRequestConfig } from \"axios\";\n\nconst BASE_URL = `${process.env.REACT_APP_BASE_URL}life`;\n\nconst api = {\n  get: (url: string, config?: AxiosRequestConfig) => {\n    return axios.get(`${BASE_URL}/${url}`, config);\n  },\n  post: (url: string, payload: any) => {\n    return axios.post(`${BASE_URL}/${url}`, payload);\n  },\n};\n\nexport default api;","import React from 'react';\nimport { Avatar } from 'antd';\n\nimport './post-card.scss';\n\nfunction PostCardPlaceholder() {\n  return (\n    <div className=\"post-card\">\n      <section className=\"post-card__stats\">\n        <Avatar className=\"post-card__stats-avatar\"></Avatar>\n        <div className=\"post-card__stats-username\">\n          <div></div>\n          <div className=\"post-card__stats-ago\"></div>\n        </div>\n        <div className=\"post-card__stats-icon\">\n          <i className=\"far fa-eye\"></i>\n        </div>\n        <div className=\"post-card__stats-icon\">\n          <i className=\"far fa-thumbs-up\"></i>\n        </div>\n        <div className=\"post-card__stats-icon\">\n          <i className=\"far fa-comment\"></i>\n        </div>\n      </section>\n      <hr className=\"post-card__divider\" />\n      {/* eslint-disable-next-line jsx-a11y/heading-has-content */}\n      <h3 className=\"post-card__details-title post-card-placeholder\"></h3>\n      <p className=\"post-card__details-content post-card-placeholder\"></p>\n    </div>\n  );\n}\n\nexport default PostCardPlaceholder;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './home-main.scss';\nimport { SCREEN, ScreenSizeContext } from '../_context/screen-size.context';\nimport PostCard from '../post/post-card';\nimport HomeNavigation from './home-navigation';\nimport { Button } from 'antd';\nimport api from '../_utils/api';\nimport PostCardPlaceholder from '../post/post-card-placeholder';\nimport { NavigationContext } from '../_context/navigation.context';\n\n\nfunction HomeMain() {\n  const { screenSize } = useContext(ScreenSizeContext);\n  const { activeCategory } = useContext(NavigationContext);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchAllPosts = async () => {\n      setLoading(true);\n      const params: any = {};\n      if (activeCategory && activeCategory !== 'all')\n        params.category = activeCategory;\n      const { data } = await api.get('posts', { params });\n      setPosts(data.items);\n      setLoading(false);\n    };\n\n    fetchAllPosts();\n  }, [activeCategory]);\n  return (\n    <main className=\"home-main\">\n      <section className=\"home-navigation\">\n        <HomeNavigation />\n      </section>\n      <section className=\"home-content\">\n        {screenSize !== SCREEN.DESKTOP && (\n          <div className=\"home-content__actions\">\n            <Link to=\"/new-post\">\n              <Button shape=\"round\" size=\"middle\">\n                <i className=\"fas fa-pen\"></i> 发帖\n              </Button>\n            </Link>\n          </div>\n        )}\n        {loading\n          ? new Array(5).fill(null).map((_, index) => <PostCardPlaceholder key={index}/>)\n          : posts.map((post: any) => {\n              return <PostCard post={post} key={post.id} />;\n            })}\n      </section>\n      <section className=\"home-sidebar\">\n        <Link to=\"/new-post\">\n          <Button shape=\"round\" size=\"middle\" block>\n            <i className=\"fas fa-pen\"></i> 发帖\n          </Button>\n        </Link>\n      </section>\n    </main>\n  );\n}\n\nexport default HomeMain;\n","import React from 'react';\nimport './home.scss';\n\nimport HomeMain from './home-main';\n\nfunction Home() {\n\n  return (\n    <div className=\"home\">\n      {/* Main Content */}\n      <HomeMain />\n      {/* Footer */}\n      <footer className=\"home-footer\">©2021 Created by Loatr</footer>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport './user.scss';\n\nimport { Breadcrumb, Divider } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined } from '@ant-design/icons';\n\nfunction User() {\n  return (\n    <div className=\"user\">\n      <Breadcrumb className=\"user-path\">\n        <Breadcrumb.Item>\n          <Link to=\"/\">\n            <HomeOutlined /> 主页\n          </Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>用户</Breadcrumb.Item>\n      </Breadcrumb>\n      <header className=\"user-header\">\n        <div className=\"user-avatar\">\n          <img\n            src=\"https://www.w3schools.com/howto/img_avatar.png\"\n            alt=\"User avatar\"\n          />\n        </div>\n      </header>\n      <section className=\"user-details\">\n        <h2 className=\"user-name\">Alexej Fausta</h2>\n        <Divider />\n        <div className=\"user-stats\">\n          <span>帖子 12</span>\n          <span>粉丝 12</span>\n          <span>关注 4</span>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default User;\n","import React from 'react';\nimport { Avatar } from 'antd';\nimport './post-owner.scss';\nimport { timeSince } from '../_utils/time';\nimport { displayCount } from '../_utils/number';\n\nfunction PostOwner({ post, fetching }: any) {\n  return (\n    <div className=\"post-owner\">\n      <section className=\"post-owner__user-info\">\n        <Avatar\n          className={`post-owner__avatar ${\n            fetching ? 'loading-placeholder' : ''\n          }`}\n          size={64}\n        >\n          {post?.owner?.name[0]}\n        </Avatar>\n        <h3>{post?.owner?.name}</h3>\n        <div\n          className={`post-owner__ago ${\n            fetching ? 'post-owner__ago-loading loading-placeholder' : ''\n          }`}\n        >\n          {post?.createdAt ? `发布于 ${timeSince(post.createdAt)}` : ''}\n        </div>\n      </section>\n\n      {/* Post stats */}\n      <section className=\"post-owner__stats\">\n        <div className=\"post-card__stats-icon\">\n          <i className=\"far fa-eye\"></i> {displayCount(post.views)}\n        </div>\n        <div className=\"post-card__stats-icon\">\n          <i className=\"far fa-thumbs-up\"></i> {displayCount(post.likes)}\n        </div>\n        <div className=\"post-card__stats-icon\">\n          <i className=\"far fa-comment\"></i> {displayCount(post.comments)}\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default PostOwner;\n","import React from 'react';\nimport { Avatar } from 'antd';\nimport './post-reply.scss';\nimport { timeSince } from '../_utils/time';\n\nfunction PostReply({ isHero, reply }: any) {\n\n  return (\n    <div className={`post-reply ${isHero ? 'post-reply--hero' : ''}`}>\n      <section className=\"post-reply__avatar\">\n        <Avatar>R</Avatar>\n      </section>\n      <section className=\"post-reply__content\">\n        <div className=\"post-reply__header\">\n          <span className=\"post-reply__header-username\">岸上某位用户</span>\n          <span className=\"post-reply__header-ago\">\n            {timeSince(reply?.createdAt)}\n          </span>\n        </div>\n        <div className=\"post-reply__content-message\">\n          {reply?.reply ||\n            'Lorem ipsum dolor sit amet consectetur, adipisicing elit. Cumque animi dicta natus pariatur sequi distinctio iste debitis? Veritatis, architecto placeat, aliquid enim perferendis ad quidem ipsum doloribus minus voluptatibus provident.'}\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default PostReply;\n","import React from 'react';\nimport './loading-spinner.scss';\n\nfunction LoadingSpinner() {\n  return (\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n}\n\nexport default LoadingSpinner;\n","import React, { useState } from 'react';\nimport { Avatar, Button } from 'antd';\nimport './post-thread-head.scss';\nimport api from '../_utils/api';\nimport { timeSince } from '../_utils/time';\n\nfunction PostThreadHead({ thread, refreshReplies, children }: any) {\n  const [startReply, setStartReply] = useState(false);\n  const [reply, setReply] = useState('');\n  const [replySubmitting, setReplySubmitting] = useState(false);\n\n  const onReply = async () => {\n    setReplySubmitting(true);\n    await api.post('post/reply', {\n      post_id: thread.post_id,\n      thread_id: thread.id,\n      reply,\n      user_id: 1,\n    });\n    setReply('');\n    setStartReply(false);\n    setReplySubmitting(false);\n    refreshReplies();\n  };\n\n  return (\n    <div className=\"post-thread__head\">\n      {/* Thread head comment */}\n      <div className=\"post-thread__head-container\">\n        <section className=\"post-thread__head-avatar\">\n          <Avatar>R</Avatar>\n        </section>\n        <section className=\"post-thread__head-content\">\n          <div className=\"post-thread__head-header\">\n            <span className=\"post-thread__head-header-username\">\n              岸上某位用户\n            </span>\n            <span className=\"post-thread__head-header-ago\">\n              {timeSince(thread?.createdAt)}\n            </span>\n          </div>\n          <p className=\"post-thread__head-content-message\">{thread?.comment}</p>\n          <div className=\"post-thread__head-action\">\n            <span className=\"post-card__head-interaction\">\n              <i className=\"far fa-thumbs-up\"></i> 123\n            </span>\n            <span className=\"post-card__head-interaction\">\n              <i className=\"far fa-thumbs-down\"></i> 45\n            </span>\n            <Button\n              size=\"small\"\n              type=\"text\"\n              onClick={() => setStartReply(!startReply)}\n              disabled={replySubmitting}\n            >\n              回复\n            </Button>\n          </div>\n        </section>\n      </div>\n      {startReply && (\n        <div className=\"post-thread__reply\">\n          <div className=\"post-thread__reply-textarea-container\">\n            <span className=\"post-thread__reply-textarea-avatar\">\n              <Avatar>M</Avatar>\n            </span>\n            <textarea\n              className=\"post-thread__reply-textarea\"\n              name=\"comment-textarea\"\n              rows={2}\n              placeholder=\"说点什么...\"\n              value={reply}\n              onChange={(e) => setReply(e.target.value)}\n              disabled={replySubmitting}\n            ></textarea>\n          </div>\n          <div className=\"post-thread__reply-textarea-actions\">\n            <Button\n              size=\"small\"\n              onClick={() => onReply()}\n              loading={replySubmitting}\n            >\n              回复\n            </Button>\n            <Button\n              size=\"small\"\n              type=\"text\"\n              onClick={() => setStartReply(false)}\n              disabled={replySubmitting}\n            >\n              取消\n            </Button>\n          </div>\n        </div>\n      )}\n\n      {/* Others */}\n      {children}\n    </div>\n  );\n}\n\nexport default PostThreadHead;\n","import React, { useState } from 'react';\nimport { Button } from 'antd';\nimport './post-thread.scss';\nimport api from '../_utils/api';\nimport PostReply from './post-reply';\nimport LoadingSpinner from '../_shared/loading-spinner';\nimport PostThreadHead from './post-thread-head';\n\nconst REPLIES_LIMIT = 10;\n\nfunction PostThread({ thread }: any) {\n  const [viewReply, setViewReply] = useState(false);\n  const [replies, setReplies] = useState([]);\n  const [repliesPage, setRepliesPage] = useState(1);\n  const [totalReplies, setTotalReplies] = useState(thread?.replies || 0);\n  const [fetchingReplies, setFetchingReplies] = useState(false);\n  const [fetchingMoreReplies, setFetchingMoreReplies] = useState(false);\n\n  const _loadReplies = async (page: number) =>{\n    const { data } = await api.get(\n      `post/${thread.post_id}/comment/${thread.id}/replies`,\n      {\n        params: { page, limit: REPLIES_LIMIT },\n      }\n    );\n    return data;\n  }\n\n  const onViewReply = async () => {\n    if (viewReply) {\n      setViewReply(false);\n      setReplies([]);\n      setRepliesPage(1);\n    } else {\n      setViewReply(true);\n      setFetchingReplies(true);\n      const data = await _loadReplies(repliesPage);\n      setFetchingReplies(false);\n      setReplies(data.replies);\n      setTotalReplies(data.count);\n    }\n  }\n\n  const refreshReplies = async () => {\n    const data = await _loadReplies(1);\n    setRepliesPage(1);\n    setReplies(data.replies);\n    setTotalReplies(data.count);\n  }\n\n  const loadMoreReplies = async () => {\n    setFetchingMoreReplies(true);\n    const nextRepliesPage = repliesPage + 1;\n    const data = await _loadReplies(nextRepliesPage);\n    setRepliesPage(nextRepliesPage);\n    setReplies(replies.concat(data.replies));\n    setTotalReplies(data.count);\n    setFetchingMoreReplies(false);\n  }\n\n  return (\n    <div className=\"post-thread\">\n      <PostThreadHead thread={thread} refreshReplies={refreshReplies}>\n        {/* View reply */}\n        {totalReplies > 0 && (\n          <Button\n            className=\"post-thread__view-reply\"\n            type=\"link\"\n            onClick={() => onViewReply()}\n          >\n            <i className={`fas fa-caret-${viewReply ? 'up' : 'down'}`}></i>{' '}\n            {viewReply ? '收起回复' : `查看${totalReplies}条回复`}\n          </Button>\n        )}\n      </PostThreadHead>\n\n      {/* Replys */}\n      {viewReply && (\n        <div className=\"post-thread__replys\">\n          {fetchingReplies && (\n            <div className=\"post-thread__replys-loading\">\n              <LoadingSpinner />\n            </div>\n          )}\n          {replies.map((reply: any) => {\n            return (\n              <PostReply\n                reply={reply}\n                key={reply.id}\n                isHero={reply.user_id === 2}\n              />\n            );\n          })}\n          {!fetchingReplies && totalReplies > replies.length && (\n            <Button\n              type=\"link\"\n              className=\"post-thread__expand\"\n              onClick={() => loadMoreReplies()}\n              loading={fetchingMoreReplies}\n            >\n              <span className=\"post-thread__expand-line\"></span>\n              展开更多回复 ({totalReplies - replies.length})\n            </Button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default PostThread;\n","import React, { useEffect, useState } from 'react';\nimport { Avatar, Divider, Button, Pagination } from 'antd';\nimport './post-comments.scss';\nimport api from '../_utils/api';\nimport PostThread from './post-thread';\n\nconst THREAD_LIMIT = 10;\n\nfunction PostComments({ post }: any) {\n  const [threads, setThreads] = useState([]);\n  const [comment, setComment] = useState('');\n  const [threadCount, setThreadCount] = useState(0);\n  const [commentSubmitting, setCommentSubmitting] = useState(false);\n\n  async function _loadComments(currentPost: any, page = 1) {\n    const { data } = await api.get(`post/${currentPost.id}/comments`, {\n      params: {\n        page,\n        limit: THREAD_LIMIT,\n      },\n    });\n    setThreads(data.threads);\n    setThreadCount(data.count);\n  }\n\n  useEffect(() => {\n    if (post?.id) {\n      _loadComments(post);\n    }\n  }, [post])\n\n  const onPageChange = (page: number) => {\n    _loadComments(post, page);\n  }\n\n  const onComment = async () => {\n    setCommentSubmitting(true);\n    await api.post('post/comment', {\n      post_id: post.id,\n      comment,\n      user_id: 1,\n    });\n    setComment('');\n    setCommentSubmitting(false);\n    _loadComments(post);\n  }\n\n  return (\n    <section className=\"post-comments\">\n      {threads?.length > 0 && (\n        <>\n          <h3>\n            <i className=\"far fa-comments\"></i> 评论区 ({post.comments})\n          </h3>\n          {threads.map((thread: any) => (\n            <PostThread thread={thread} key={thread.id} />\n          ))}\n          <Pagination\n            className=\"post-comments__pagination\"\n            size=\"small\"\n            defaultCurrent={1}\n            pageSize={THREAD_LIMIT}\n            onChange={onPageChange}\n            showSizeChanger={false}\n            total={threadCount}\n          />\n        </>\n      )}\n      <Divider />\n      <div className=\"post-comments__textarea-container\">\n        <span className=\"post-comments__textarea-avatar\">\n          <Avatar size={36}>M</Avatar>\n        </span>\n        <textarea\n          className=\"post-comments__textarea\"\n          name=\"comment-textarea\"\n          rows={4}\n          value={comment}\n          onChange={(e) => setComment(e.target.value)}\n          disabled={commentSubmitting}\n        ></textarea>\n      </div>\n      <div className=\"post-comments__textarea-actions\">\n        <Button onClick={() => onComment()} loading={commentSubmitting}>\n          留言\n        </Button>\n      </div>\n    </section>\n  );\n}\n\nexport default PostComments;\n","import React from 'react';\nimport { Button } from 'antd';\nimport Editor from 'rich-markdown-editor';\nimport './post-main.scss';\nimport PostComments from '../post-comments/post-comments';\n\nfunction PostMain({ post, fetching }: any) {\n  return (\n    <div className=\"post-main\">\n      {/* Header */}\n      <header className=\"post-main__title\">\n        <h1\n          className={`post-main__title-text ${\n            fetching ? 'post-mian__placeholder loading-placeholder' : ''\n          }`}\n        >\n          {post.title}\n        </h1>\n      </header>\n      {/* Content */}\n      <main className=\"post-main__content\">\n        {fetching ? (\n          <div className=\"post-main__content-placeholder\">\n            <div className=\"loading-placeholder\"></div>\n            <div className=\"loading-placeholder\"></div>\n            <div className=\"loading-placeholder\"></div>\n          </div>\n        ) : (\n          <Editor value={post.content} readOnly={true} />\n        )}\n      </main>\n      <p className=\"post-main_copyright-disclaimer\">\n        著作权归作者所有，未经授权禁止转载\n      </p>\n      {/* Interactions */}\n      {!fetching && (\n        <>\n          <section className=\"post-main__interactions\">\n            <Button type=\"primary\" shape=\"circle\">\n              <i className=\"far fa-thumbs-up\"></i>\n            </Button>\n            <Button type=\"primary\" shape=\"circle\">\n              <i className=\"far fa-star\"></i>\n            </Button>\n            <Button type=\"primary\" shape=\"circle\">\n              <i className=\"fas fa-share-alt\"></i>\n            </Button>\n            <Button type=\"primary\" shape=\"circle\">\n              <i className=\"far fa-bookmark\"></i>\n            </Button>\n          </section>\n          <PostComments post={post} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default PostMain;\n","\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb } from 'antd';\nimport { HomeOutlined } from '@ant-design/icons';\n\nimport './post.scss';\nimport PostOwner from './post-owner';\nimport PostMain from './post-mian';\nimport api from '../_utils/api';\nimport { CATEGORIES_MAP, CATEGORIES_PARENT } from '../_utils/categories';\n\n\nfunction Post(props: any) {\n  const [post, setPost] = useState<any>({});\n  const [fetching, setFetching] = useState(false);\n\n  useEffect(() => {\n    const getPostDetails = async () => {\n      setFetching(true);\n      const { data } = await api.get(`post/${props.match.params.postId}`);\n      setFetching(false);\n      setPost(data);\n    }\n    getPostDetails();\n  }, [props.match.params.postId]);\n\n  return (\n    <div className=\"post\">\n      <section className=\"post__path\">\n        <Breadcrumb>\n          <Breadcrumb.Item>\n            <Link to=\"/\">\n              <HomeOutlined /> 主页\n            </Link>\n          </Breadcrumb.Item>\n          <Breadcrumb.Item>{CATEGORIES_PARENT[post.category]}</Breadcrumb.Item>\n          <Breadcrumb.Item>{CATEGORIES_MAP[post.category]}</Breadcrumb.Item>\n        </Breadcrumb>\n      </section>\n      <section className=\"post__container\">\n        <PostOwner post={post} />\n        <PostMain post={post} fetching={fetching}/>\n      </section>\n    </div>\n  );\n}\n\nexport default Post;\n","import React, { useState } from 'react';\nimport { Button, Modal, Radio } from 'antd';\nimport './post-creation-category.scss';\nimport { CATEGORIES, CATEGORIES_MAP } from '../_utils/categories';\n\nfunction PostCreationCategory(props: any) {\n  const { selectedCategory, setSelectedCategory, showMissingField } = props;\n  const [modalOpen, setModelOpen] = useState(false);\n  const [category, setCategory] = useState<string>(selectedCategory);\n\n  const onCategoryChanged = (evt: any) => {\n    setCategory(evt.target.value);\n  }\n\n  const onCategoryConfirmed = () => {\n    setSelectedCategory(category);\n    setModelOpen(false);\n  }\n\n  return (\n    <>\n      <h3 className=\"post-creation-category__btn\">\n        文章分类:{' '}\n        <Button\n          onClick={() => setModelOpen(true)}\n          size=\"small\"\n          shape={selectedCategory ? 'round' : undefined}\n          danger={!selectedCategory && showMissingField ? true : false}\n        >\n          {selectedCategory ? <i className=\"fas fa-pen\"></i> : '请选择'}\n          {selectedCategory ? CATEGORIES_MAP[selectedCategory] : ''}\n        </Button>\n      </h3>\n      <Modal\n        className=\"post-creation-category__modal\"\n        title=\"选择分类\"\n        visible={modalOpen}\n        onOk={() => onCategoryConfirmed()}\n        onCancel={() => setModelOpen(false)}\n      >\n        {CATEGORIES.map((topCategory: any) => {\n          return (\n            <section\n              className=\"post-creation-category__modal-section\"\n              key={topCategory.name}\n            >\n              <h3>{topCategory.name}</h3>\n              <Radio.Group onChange={onCategoryChanged} value={category}>\n                {topCategory.subcategories.map((subCategory: any) => {\n                  return subCategory.type === 'group' ? (\n                    subCategory.subcategories.map((category: any) => {\n                      return (\n                        <Radio value={category.id} key={category.id}>\n                          {CATEGORIES_MAP[category.id]}\n                        </Radio>\n                      );\n                    })\n                  ) : (\n                    <Radio value={subCategory.id} key={subCategory.id}>\n                      {CATEGORIES_MAP[subCategory.id]}\n                    </Radio>\n                  );\n                })}\n              </Radio.Group>\n            </section>\n          );\n        })}\n      </Modal>\n    </>\n  );\n}\n\nexport default PostCreationCategory;\n","import React, { useState } from 'react';\nimport { Button, Divider, Input } from 'antd';\nimport Editor from 'rich-markdown-editor';\nimport './post-creation.scss';\nimport api from '../_utils/api';\nimport PostCreationCategory from './post-creation-category';\n\nfunction PostCreation(props: any) {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [publishing, setPublishing] = useState(false);\n  const [showMissingField, setShowMissingField] = useState(false);\n\n  const onChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const onChangeContent = (getValue: Function) => {\n    const value = getValue();\n    setContent(value);\n  };\n\n  const onPublish = async () => {\n    setShowMissingField(true);\n    if (title.length && content.length && selectedCategory) {\n      setPublishing(true);\n      const payload = { title, content, category: selectedCategory };\n      await api.post('post', payload);\n      setPublishing(false);\n      // Redirect back to homepage\n      props.history.push('/');\n    }\n  }\n\n  return (\n    <div className=\"post-creation\">\n      <section className=\"post-creation__actions\">\n        <PostCreationCategory\n          selectedCategory={selectedCategory}\n          setSelectedCategory={setSelectedCategory}\n          showMissingField={showMissingField}\n        />\n        <Divider />\n        <Button\n          onClick={() => onPublish()}\n          block\n          loading={publishing}\n          disabled={publishing}\n        >\n          发布\n        </Button>\n      </section>\n      <section className=\"post-creation__editor\">\n        {/* Title */}\n        <div\n          className={`post-creation__editor-title ${\n            !title && showMissingField ? 'post-creation__missing-field' : ''\n          }`}\n        >\n          <Input\n            placeholder=\"输入你的标题\"\n            value={title}\n            onChange={(e) => onChangeTitle(e)}\n          />\n        </div>\n        {/* Content */}\n        <div\n          className={`post-creation__editor-content ${\n            !content && showMissingField ? 'post-creation__missing-field' : ''\n          }`}\n        >\n          <Editor\n            placeholder=\"写下你的心路历程\"\n            onChange={(e) => onChangeContent(e)}\n          />\n        </div>\n        {/* Actions */}\n        <div className=\"post-creation__editor-actions\">\n          <Button\n            onClick={() => onPublish()}\n            loading={publishing}\n            disabled={publishing}\n          >\n            发布\n          </Button>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default PostCreation;\n","import React, { useContext } from 'react';\nimport { useHistory, Route, Switch } from 'react-router-dom';\nimport { Avatar, Divider } from 'antd';\nimport HomeNavigation from '../home/home-navigation';\nimport { ScreenSizeContext } from '../_context/screen-size.context';\nimport './global-side-panel.scss';\n\nfunction GlobalSidePanel() {\n  const history = useHistory();\n  const { sidePanelOpen, toggleSidePanel } = useContext(ScreenSizeContext);\n\n  const toUserPage = () => {\n    toggleSidePanel();\n    history.push('/user');\n  }\n\n  return (\n    <div\n      className={`global-side-panel ${\n        sidePanelOpen ? 'side-panel-opened' : ''\n      }`}\n    >\n      {/* User */}\n      <section className=\"global-side-panel__user\" onClick={() => toUserPage()}>\n        <Avatar>U</Avatar>\n        <span className=\"global-side-panel__user-name\">Michael Jackson</span>\n        <i className=\"fas fa-chevron-right\"></i>\n      </section>\n      <Divider />\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomeNavigation onCategoryChange={() => toggleSidePanel()} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default GlobalSidePanel;\n","import React, { useEffect } from 'react';\n// import './login.scss';\n\nimport { Button } from 'antd';\n\nfunction loadScript(onLoad = () => {}, onError = () => {}) {\n  const element = document.getElementsByTagName('script')[0];\n  const lastScript = element;\n  let script = element;\n  script = document.createElement('script');\n  script.id = 'google-login';\n  script.src = process.env.REACT_APP_GAPI_SCRIPT_URL!;\n  if (lastScript && lastScript.parentNode) {\n    lastScript.parentNode.insertBefore(script, lastScript);\n  } else {\n    document.head.appendChild(script);\n  }\n  script.onerror = onError;\n  script.onload = onLoad;\n};\n\nfunction removeScript() {\n  const element = document.getElementById('google-login');\n  if (element) {\n    element!.parentNode!.removeChild(element);\n  }\n}\n\nfunction LoginGoogle() {\n  useEffect(() => {\n    let unmounted = false\n    loadScript(() => {\n      const gapi = (window  as any).gapi;\n      gapi.load('auth2', () => {\n        const GoogleAuth = gapi.auth2.getAuthInstance();\n        if (!GoogleAuth) {\n          const params = {\n            client_id: `${process.env.REACT_APP_GAUTH_CLIENT_ID}.apps.googleusercontent.com`,\n            cookie_policy: 'single_host_origin',\n          };\n          gapi.auth2.init(params).then(\n            (res: any) => {\n              if (!unmounted) {\n                console.log(res);\n                const isSignedIn = res.isSignedIn.get();\n                console.log('isSignedIn', isSignedIn);\n                if (isSignedIn) {\n                  const userInfo = res.currentUser.get();\n                  console.log(userInfo);\n                }\n              }\n            }\n          );\n        } else {\n          // GoogleAuth.then(\n          //   () => {\n          //     if (unmounted) {\n          //       return;\n          //     }\n          //     if (isSignedIn && GoogleAuth.isSignedIn.get()) {\n          //       setLoaded(true);\n          //       onAutoLoadFinished(true);\n          //       handleSigninSuccess(GoogleAuth.currentUser.get());\n          //     } else {\n          //       setLoaded(true);\n          //       onAutoLoadFinished(false);\n          //     }\n          //   },\n          //   (err) => {\n          //     onFailure(err);\n          //   }\n          // );\n        }\n      });\n    })\n\n    return () => {\n      unmounted = true\n      removeScript();\n    }\n  });\n\n  const signinWithGoogle = () => {\n    const GoogleAuth = (window as any).gapi.auth2.getAuthInstance();\n    GoogleAuth.signIn({}).then(\n      (res: any) => {\n        console.log('login succeed', res);\n        const basicProfile = res.getBasicProfile();\n        const authResponse = res.getAuthResponse(true);\n        const data: any = {};\n        data.googleId = basicProfile.getId();\n        data.tokenObj = authResponse;\n        data.tokenId = authResponse.id_token;\n        data.accessToken = authResponse.access_token;\n        data.profileObj = {\n          googleId: basicProfile.getId(),\n          imageUrl: basicProfile.getImageUrl(),\n          email: basicProfile.getEmail(),\n          name: basicProfile.getName(),\n          givenName: basicProfile.getGivenName(),\n          familyName: basicProfile.getFamilyName(),\n        };\n        console.log('data', data);\n      },\n      (err: any) => {\n        console.log('login failed', err);\n      }\n    );\n  }\n\n  return (\n    <Button onClick={() => signinWithGoogle()}>\n      <i className=\"fab fa-google\"></i> 使用Google登录\n    </Button>\n  );\n}\n\nexport default LoginGoogle;\n","import React from 'react';\nimport './login.scss';\n\nimport { Breadcrumb } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined } from '@ant-design/icons';\nimport LoginGoogle from './login-google';\n\nfunction Login() {\n  return (\n    <div className=\"login\">\n      <Breadcrumb className=\"user-path\">\n        <Breadcrumb.Item>\n          <Link to=\"/\">\n            <HomeOutlined /> 主页\n          </Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>用户登录</Breadcrumb.Item>\n      </Breadcrumb>\n      <form className=\"login-form\">\n        <h3>选择登录方式</h3>\n        <LoginGoogle />\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useContext } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.scss';\nimport { SCREEN, ScreenSizeContext } from './_context/screen-size.context';\nimport GlobalHeader from './global/global-header';\n\nimport Home from './home/home';\nimport User from './user/user';\nimport Post from './posts/post';\nimport PostCreation from './post-creation/post-creation';\nimport GlobalSidePanel from './global/global-side-panel';\nimport Login from './login/login';\n\n\n\nfunction App() {\n  const { screenSize, sidePanelOpen } = useContext(ScreenSizeContext);\n  return (\n    <Router>\n      <main\n        className={`app-container ${\n          sidePanelOpen ? 'app-container-pushed' : ''\n        }`}\n      >\n        <GlobalHeader />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/post/:postId\" component={Post} />\n          <Route path=\"/new-post\" component={PostCreation} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/user\" component={User} />\n        </Switch>\n      </main>\n      {screenSize === SCREEN.MOBILE && <GlobalSidePanel />}\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport NavigationContextProvider from './navigation.context';\nimport ScreenSizeContextProvider from './screen-size.context';\nimport UserContextProvider from './user.context';\n\nexport default function GlobalContextProvider(props: any) {\n  return (\n    <ScreenSizeContextProvider>\n      <UserContextProvider>\n        <NavigationContextProvider>{props.children}</NavigationContextProvider>\n      </UserContextProvider>\n    </ScreenSizeContextProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport GlobalContextProvider from './_context/global.context';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <GlobalContextProvider>\n    <App />\n  </GlobalContextProvider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}